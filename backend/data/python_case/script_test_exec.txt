import pandas as pd
import json
col_states={}

revenue = pd.read_csv("apple-iphone-revenue.csv")
if (isinstance(revenue, pd.DataFrame)):
    columns = list(revenue.index.names)
    if columns[0]:
        columns.extend(list(revenue.columns.values))
        col_states[3] = columns
        revenue.to_csv("L3 (revenue).csv", index=True)
    else:
        col_states[3] = list(revenue.columns.values)
        revenue.to_csv("L3 (revenue).csv", index=False)

sales = pd.read_csv("apple-iphone-unit-sales.csv")
if (isinstance(sales, pd.DataFrame)):
    columns = list(sales.index.names)
    if columns[0]:
        columns.extend(list(sales.columns.values))
        col_states[4] = columns
        sales.to_csv("L4 (sales).csv", index=True)
    else:
        col_states[4] = list(sales.columns.values)
        sales.to_csv("L4 (sales).csv", index=False)


sales[['quarter', "year"]] = sales.Category.str.split("/",expand=True)
if (isinstance(sales, pd.DataFrame)):
    columns = list(sales.index.names)
    if columns[0]:
        columns.extend(list(sales.columns.values))
        col_states[6] = columns
        sales.to_csv("L6 (sales).csv", index=True)
    else:
        col_states[6] = list(sales.columns.values)
        sales.to_csv("L6 (sales).csv", index=False)

revenue[['quarter', "year"]] = revenue.Category.str.split("/",expand=True)
if (isinstance(revenue, pd.DataFrame)):
    columns = list(revenue.index.names)
    if columns[0]:
        columns.extend(list(revenue.columns.values))
        col_states[7] = columns
        revenue.to_csv("L7 (revenue).csv", index=True)
    else:
        col_states[7] = list(revenue.columns.values)
        revenue.to_csv("L7 (revenue).csv", index=False)


s_sum = sales.groupby(['year']).sum()
if (isinstance(s_sum, pd.DataFrame)):
    columns = list(s_sum.index.names)
    if columns[0]:
        columns.extend(list(s_sum.columns.values))
        col_states[9] = columns
        s_sum.to_csv("L9 (s_sum).csv", index=True)
    else:
        col_states[9] = list(s_sum.columns.values)
        s_sum.to_csv("L9 (s_sum).csv", index=False)

r_sum = revenue.groupby(['year']).sum()
if (isinstance(r_sum, pd.DataFrame)):
    columns = list(r_sum.index.names)
    if columns[0]:
        columns.extend(list(r_sum.columns.values))
        col_states[10] = columns
        r_sum.to_csv("L10 (r_sum).csv", index=True)
    else:
        col_states[10] = list(r_sum.columns.values)
        r_sum.to_csv("L10 (r_sum).csv", index=False)


s_sum = s_sum.reset_index(drop=True)
if (isinstance(s_sum, pd.DataFrame)):
    columns = list(s_sum.index.names)
    if columns[0]:
        columns.extend(list(s_sum.columns.values))
        col_states[12] = columns
        s_sum.to_csv("L12 (s_sum).csv", index=True)
    else:
        col_states[12] = list(s_sum.columns.values)
        s_sum.to_csv("L12 (s_sum).csv", index=False)

r_sum = r_sum.reset_index(drop=True)
if (isinstance(r_sum, pd.DataFrame)):
    columns = list(r_sum.index.names)
    if columns[0]:
        columns.extend(list(r_sum.columns.values))
        col_states[13] = columns
        r_sum.to_csv("L13 (r_sum).csv", index=True)
    else:
        col_states[13] = list(r_sum.columns.values)
        r_sum.to_csv("L13 (r_sum).csv", index=False)


# rev_sales2 = pd.merge([s_sum, r_sum])
rev_sales = pd.concat([s_sum, r_sum])
if (isinstance(rev_sales, pd.DataFrame)):
    columns = list(rev_sales.index.names)
    if columns[0]:
        columns.extend(list(rev_sales.columns.values))
        col_states[16] = columns
        rev_sales.to_csv("L16 (rev_sales).csv", index=True)
    else:
        col_states[16] = list(rev_sales.columns.values)
        rev_sales.to_csv("L16 (rev_sales).csv", index=False)

rev_sales.loc[len(rev_sales)] = rev_sales.mean()
if (isinstance(rev_sales, pd.DataFrame)):
    columns = list(rev_sales.index.names)
    if columns[0]:
        columns.extend(list(rev_sales.columns.values))
        col_states[17] = columns
        rev_sales.to_csv("L17 (rev_sales).csv", index=True)
    else:
        col_states[17] = list(rev_sales.columns.values)
        rev_sales.to_csv("L17 (rev_sales).csv", index=False)

with open("colnames.txt","w",encoding='utf-8') as fp:
    json.dump(col_states,fp,indent=2)